name: "[PUSH] Deploy Hugo to GitHub Pages"

on:
  push:
    branches:
      - master
    paths:
      - 'dist/json/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      branch:
        description: 'branch를 입력해주세요(master만 허용)'
        required: true
        default: 'master'

env:
  SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.111.2
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH }}
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
          pip install PyYAML
          pip install Jinja2

      - name: Generate markdown files
        run: |
          sudo rm -rf content/en
          cd bin
          python markdown.py

      - name: Push artifacts to origin master
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: master
          commit_message: "[CI] markdown files has been generated"
          commit_user_name: cloudforet-admin
          commit_user_email: admin@cloudforet.io
          commit_author: cloudforet-admin <admin@cloudforet.io>
          push_options: '--force'

      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Install Dart Sass Embedded
        run: sudo snap install dart-sass-embedded

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./public

      - name: Notice when job fails
        if: failure()
        uses: 8398a7/action-slack@v3.15.0
        with:
          status: ${{job.status}}
          fields: repo,workflow,job
          author_name: Github Action Slack

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  notification:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Slack
        if: always()
        uses: 8398a7/action-slack@v3.15.0
        with:
          status: ${{job.status}}
          fields: repo,message,commit,author,action,ref,workflow,job
          author_name: Github Action Slack
